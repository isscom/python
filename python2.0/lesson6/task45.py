# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести все
# пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).

# Ввод: 
# 300 
# Вывод:
# 220 284

# ПОЯСЛЕНИЕ ПО УСЛОВИЮ:
# 220 и 284 - дружественные, т.к.
# сумма делителей 220, а именно 1, 2,..., 110 (220/2) = 284
# сумма делителей 284, а именно 1, 2,..., 142 (284/2) = 220

# Ввод ограничение до которого ищем числа:
num = int(input('Ввод:\n'))
array_45 = list()
for i in range(num + 1): # проходимся циклом по всем числам от нуля до заданного числа включительно (органичения)
    sum_friendly_numbers = 0 # считаем сумму делителей и при следующей i обнуляем её
    for j in range(1, i // 2 + 1): # не может быть такого делителя, кот. больше, чем 1/2 числа (а +1, чтобы это число также было включено)
        if i % j == 0: # находим делитель j (делится ровно без остатка на j)
            sum_friendly_numbers += j # считаем сумму делителей (j включаем в переменную)
    array_45.append((i, sum_friendly_numbers)) # добавляем в список - кортежи (число, сумма делителей)

# [(0, 0), (1, 0), (2, 1), (3, 1), (4, 3), (5, 1), (6, 6), (7, 1), (8, 7), (9, 4), (10, 8), (11, 1), (12, 16), (13, 1), (14, 10), (15, 9), (16, 15), (17, 1), (18, 21), (19, 1), (20, 22), (21, 11), (22, 14), (23, 1), (24, 36), (25, 6), (26, 16), (27, 13), (28, 28), (29, 1), (30, 42), (31, 1), (32, 31), (33, 15), (34, 20), (35, 13), (36, 55), (37, 1), (38, 22), (39, 17), (40, 50), (41, 1), (42, 54), (43, 1), (44, 40), (45, 33), (46, 26), (47, 1), (48, 76), (49, 8), (50, 43), (51, 21), (52, 46), (53, 1), (54, 66), (55, 17), (56, 64), (57, 23), (58, 32), (59, 1), (60, 108), (61, 1), (62, 34), (63, 41), (64, 63), (65, 19), 
# (66, 78), (67, 1), (68, 58), (69, 27), (70, 74), (71, 1), (72, 123), (73, 1), (74, 40), (75, 49), (76, 64), (77, 19), (78, 90), (79, 1), (80, 106), (81, 40), (82, 44), (83, 1), (84, 140), (85, 23), (86, 46), 
# (87, 33), (88, 92), (89, 1), (90, 144), (91, 21), (92, 76), (93, 35), (94, 50), (95, 25), (96, 156), (97, 1), (98, 73), (99, 57), (100, 117), (101, 1), (102, 114), (103, 1), (104, 106), (105, 87), (106, 56), 
# (107, 1), (108, 172), (109, 1), (110, 106), (111, 41), (112, 136), (113, 1), (114, 126), (115, 29), (116, 94), (117, 65), (118, 62), (119, 25), (120, 240), (121, 12), (122, 64), (123, 45), (124, 100), (125, 31), (126, 186), (127, 1), (128, 127), (129, 47), (130, 122), (131, 1), (132, 204), (133, 27), (134, 70), (135, 105), (136, 134), (137, 1), (138, 150), (139, 1), (140, 196), (141, 51), (142, 74), (143, 25), (144, 259), (145, 35), (146, 76), (147, 81), (148, 118), (149, 1), (150, 222), (151, 1), (152, 148), (153, 81), (154, 134), (155, 37), (156, 236), (157, 1), (158, 82), (159, 57), (160, 218), (161, 31), (162, 201), (163, 1), (164, 130), (165, 123), (166, 86), (167, 1), (168, 312), (169, 14), (170, 154), (171, 89), (172, 136), (173, 1), (174, 186), (175, 73), (176, 196), (177, 63), (178, 92), (179, 1), (180, 366), (181, 1), (182, 154), (183, 65), (184, 176), (185, 43), (186, 198), (187, 29), (188, 148), (189, 131), (190, 170), (191, 1), (192, 316), (193, 1), (194, 100), (195, 141), (196, 203), (197, 1), (198, 270), (199, 1), (200, 265), (201, 71), (202, 104), (203, 37), (204, 300), (205, 47), (206, 106), (207, 105), (208, 226), (209, 31), (210, 366), (211, 1), (212, 166), (213, 75), (214, 110), (215, 49), (216, 384), (217, 39), (218, 112), (219, 77), (220, 284), (221, 31), (222, 234), (223, 1), (224, 280), (225, 178), (226, 116), (227, 1), (228, 332), (229, 1), (230, 202), (231, 153), (232, 218), (233, 1), (234, 312), (235, 53), (236, 184), (237, 83), (238, 194), (239, 1), (240, 504), (241, 1), (242, 157), (243, 121), (244, 190), (245, 97), (246, 258), (247, 33), (248, 232), (249, 87), (250, 218), (251, 1), (252, 476), (253, 35), (254, 130), (255, 177), (256, 255), (257, 1), (258, 270), (259, 45), (260, 328), (261, 129), (262, 134), (263, 1), (264, 456), (265, 59), (266, 214), (267, 93), (268, 208), (269, 1), (270, 450), (271, 1), (272, 286), (273, 175), (274, 140), (275, 97), (276, 396), (277, 1), (278, 142), (279, 137), (280, 440), (281, 1), (282, 294), (283, 1), (284, 220), (285, 195), (286, 218), (287, 49), (288, 531), (289, 18), (290, 
# 250), (291, 101), (292, 226), (293, 1), (294, 390), (295, 65), (296, 274), (297, 183), (298, 152), (299, 37)]
print('Вывод:')
for i in range(len(array_45)):
    for j in range(i + 1, len(array_45)):
        if array_45[i][0] == array_45[j][1] and array_45[i][1] == array_45[j][0]:
            print(*array_45[i])
# т.е. (220, 284) и (284, 220)
#     [i][1] [i][0] [j][1] [j][0]
#       1/1  1/2     2/1    2/2
#  если 1/1 =2/2  и  1/2 =  2/1
# [0] - первый элемент кортежа
# [1] - второй элемент кортежа